


Create the accounts:
        geth --datadir node/ account new
        
        geth --datadir bootnode/ account new
        geth --datadir miner/ account new
        

puppeth


Create genesis blocks for each Node:
        geth --datadir data/node/ init genesis.json
        geth --datadir data/bootnode/ init genesis.json
        geth --datadir data/miner/ init genesis.json

bootnode:
    bootnode -genkey boot.key
    bootnode -nodekey boot.key -verbosity 9 -addr :30310


geth attach http://localhost:8545

To make sure all the Geth Services are running, check the processes: 
ps aux | grep geth

web3.fromWei(eth.getBalance("0xaeb069b8ea331670cb9d943bdfc43f64e188d344"),  "ether")
web3.fromWei(eth.getBalance("0xd15c54eb169ab3333577b56ef9b3a77bb1d02abd"),  "ether")
web3.fromWei(eth.getBalance("0x703b3d36f6d86fb3ef2c93cc19de11234d3c968c"),  "ether")

1- the connectivity of the nodes:

curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 1,
    "method": "admin_peers",
    "params": []
}'


2. get the latest block number:

curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 2,
    "method": "eth_blockNumber",
    "params": []
}'

3. get the address of our primary account created while the image is being built:
curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 3,
    "method": "eth_accounts",
    "params": []
}'
{"jsonrpc":"2.0","id":3,"result":["0x389cf7ec2e692a6980d68e3f252d417fc6e314af"]}

4. Now, let’s see how rich we are
curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 4,
    "method": "eth_getBalance",
    "params": [
        "0x513ededa7a66d181e3b7a14add8d23112664a107",
        "latest"
    ]
}'

5. To test transferring some funds, we will create another account to be the recipient:
curl --location --request POST 'http://localhost:8545' \
--header 'Content-type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 5,
    "method": "personal_newAccount",
    "params": [
        "password"
    ]
}'

{"jsonrpc":"2.0","id":5,"result":"0x5b6cf1dd9a038554c3e0283c92b754701b01479b"}

6. Before sending a transaction, we must make sure that the sender account is unlocked:

curl --location --request POST 'http://localhost:8545' \
--header 'Content-type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 6,
    "method": "personal_unlockAccount",
    "params": [
        "0xcb33fdd1dd5b26e932d56f1d6755aed04eaaab25",
        "5uper53cr3t"
    ]
}'
{"jsonrpc":"2.0","id":6,"result":true}

curl --location --request POST 'http://localhost:8554' \
--header 'Content-type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 6,
    "method": "personal_unlockAccount",
    "params": [
        "0x389cf7ec2e692a6980d68e3f252d417fc6e314af",
        "5uper53cr3t"
    ]
}'


7. Now we are ready to transfer some fund:

curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 7,
    "method": "eth_sendTransaction",
    "params": [
        {
            "from": "0xAEb069b8EA331670cB9D943BDfc43F64e188d344",
            "to": "0xe2cc198055e41759764b992a3d2b73959b3b8e46",
            "value": "0xf4240"
        }
    ]
}'

{"jsonrpc":"2.0","id":7,"result":"0x5e8fe88a2c98acbe0c6867072fa429eb17bea1e43470f9ab2f65424bacaea34d"}

8. We can get the status of a transaction by its hash:
curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 8,
    "method": "eth_getTransactionByHash",
    "params": [ "0x4dbaf5e4e28300f0747864ffa80bcf263f2806285bc55e7478dd462fe66e97e3" ]
}'

9. Lastly, verify if we get the fund in the recipient’s account:
curl --location --request POST 'localhost:8545' \
--header 'Content-Type: application/json' \
--data-raw '{
    "jsonrpc": "2.0",
    "id": 9,
    "method": "eth_getBalance",
    "params": [
        "0xe2cc198055e41759764b992a3d2b73959b3b8e46",
        "latest"
    ]
}'

